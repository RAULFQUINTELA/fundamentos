#include "stdlib.h"
#include <iostream>
#include <string>

#define MAX 6

using namespace std;

struct tintereses
{
    int numero;
    string intereses;
    string descripcion;
    int estado;
};

tintereses V[MAX];

int insertar(); //CARGAR
void listar(int N); //MOSTRAR
void consultar(int N);
void modificar(int N);
void borrar(int N);
void clasificar();

void main()
{
    int N, opc;
    do {
        cout << "\n MENU ";
        cout << "\n [1]---> Insertar ";
        cout << "\n [2]---> Listar ";
        cout << "\n [3]---> Consultar ";
        cout << "\n [4]---> Modificar ";
        cout << "\n [5]---> Borrar ";
        cout << "\n [6]---> Clasificar los datos ";
        cout << "\n [0]---> Salir ";
        cout << "\n Ingrese la opcion: ";
        cin >> opc;

        switch (opc)
        {
        case 1:N = insertar(); break;
        case 2: listar(N); break;
        case 3: consultar(N); break;
        case 4: modificar(N); break;
        case 5: borrar(N); break;
        case 6: clasificar(); break;
        case 0: cout << "Salir"; break;
        default: cout << "Error"; break;
        }
        system("cls");

    } while (opc != 0);
    system("pause");
    system("notepad");
}

int insertar()
{
    int N;
    cout << "Ingrese el numero de datos que desea insertar: ";
    cin >> N;
    while (N > MAX)
    {
        cout << "Error. El numero de datos no puede ser mayor que " << MAX << ". Ingrese nuevamente: ";
        cin >> N;
    }
    for (int i = 0; i < N; i++)
    {
        bool idRepetido;
        do
        {
            idRepetido = false;
            cout << "Ingrese el ID: " << endl;
            cin >> V[i].numero;

            for (int j = 0; j < i; j++)
            {
                if (V[i].numero == V[j].numero)
                {
                    cout << "Error. El ID ya existe. Ingrese nuevamente." << endl;
                    idRepetido = true;
                    break;
                }
            }

        } while (idRepetido);

        cout << "Ingrese el interes: " << endl;
        cin.ignore();
        getline(cin, V[i].intereses);
        cout << "Ingrese la descripcion: " << endl;
        getline(cin, V[i].descripcion);
        V[i].estado = 0;
    }
    system("pause");
    return N;
}

void listar(int N)
{
    cout << "listado" << endl;
    cout << "ID" << "\t";
    cout << "Interes" << "\t";
    cout << "Descripcion" << "\t" << endl;
    for (int i = 0; i < N; i++)
    {
        if (V[i].estado != 9) //Si el estado es 9 esta borrado, borrado logico
        {
            cout << V[i].numero << "\t";
            cout << V[i].intereses << "\t";
            cout << V[i].descripcion << endl;
        }
    }
    system("pause");
}

void consultar(int N)
{
    int idElemento;
    bool band = true;
    cout << "Ingrese los elementos a consultar (introduzca el ID): ";
    cin >> idElemento;
    for (int i = 0; i < MAX; i++)
    {
        if (V[i].numero == idElemento)
        {
            cout << "Interes: " << V[i].intereses;
            cout << "\tDescripcion: " << V[i].descripcion<<endl;
            band = false;
        }
    }
    if (band)
        cout << "Elemento ingresado No encontrado en la base de datos." << endl;
    system("pause");
}

void modificar(int N)
{
    int idElemento;
    bool band = true;
    char resp;
    cout << "Ingrese el elemento a modificar (introduzca el ID): ";
    cin >> idElemento;
    for (int i = 0; i < MAX; i++)  // Utilizar MAX como límite para buscar en todo el array
    {
        if (V[i].numero == idElemento)
        {
            band = false;
            cout << "Intereses: " << V[i].intereses << endl;
            cout << "Desea modificar el dato: (coloque s): ";
            cin >> resp;
            cin.ignore();
            if (resp == 's')
            {
                cout << "Ingrese el nuevo dato:";
                getline(cin, V[i].intereses);
            }
            cout << "Descripcion: " << V[i].descripcion << endl;
            cout << "Desea modificar el dato: (coloque s): ";
            cin >> resp;
            cin.ignore();
            if (resp == 's')
            {
                cout << "Ingrese el nuevo dato:";
                getline(cin, V[i].descripcion);
            }
        }
    }
    if (band) // Corregir la condición de verificación de elemento no encontrado
        cout << "Elemento ingresado No encontrado en la base de datos. " << endl;
    system("pause");
}

void borrar(int N)
{
    //Borrar logico
    int idElemento;
    bool band = true;
    cout << "Ingresar el elemento a borrar (introduzca el ID): ";
    cin >> idElemento;
    for (int i = 0; i < N; i++)
    {
        if (V[i].numero == idElemento)
        {
            V[i].estado = 9; //Borrado logico
            band = false;
        }
    }
    if (band != false)
        cout << "Elemento ingresado No encontrado en la base de datos." << endl;
    system("pause");
}

void clasificar()
{
    for (int i = 0; i < MAX - 1; i++)
    {
        for (int j = 0; j < MAX - i - 1; j++)
        {
            if (V[j].numero > V[j + 1].numero)
            {
                tintereses temp = V[j];
                V[j] = V[j + 1];
                V[j + 1] = temp;
            }
        }
    }

    cout << "Datos clasificados por ID:" << endl;
    listar(MAX);
}
