1.
/*Dado un número entero N, hacer un programa para sumar los dígitos de cada uno de ellos.   Ej. Si N= 45634,  la suma es 4+5+6+3+4=22*/

#include <iostream>

using namespace std;

float CalculoDigito(int n);

int main()
{
    int n;
    float Resultado;
    
    do
    {
        cout<<"Introducir el número de dígitos a sumar: ";
        cin>>n;
        if(n<0)
        {
            cout<<"El número a calcular debe ser mayor a 0";
        }
    }
    while(n<=0);
    
    Resultado=CalculoDigito(n);
    
    cout<<"La suma de los números es: "<<Resultado;
    
    return 0;
}

float CalculoDigito(int n)
{
    int suma=0;
    int dig;
    while(n!=0)
    {
        dig=n%10;
        suma+=dig;
        n/=10;
    }
    return suma;
}

2.
/*Dado un número entero N, hacer un programa para invertir el número en otra variable Z.  
Ej. Si N= 456721, el número invertido es Z=127654.*/

#include <iostream>

using namespace std;

float InversionDigito(int n);

int main()
{
    int n,z;
    float Resultado;
    
    cout<<"Introducir el número de dígitos a invertir: ";
    cin>>n;

    Resultado=InversionDigito(n);
    
    cout<<"La inversión del número planteado es: "<<Resultado;
    
    return 0;
}

float InversionDigito(int n)
{
    int z=0;
    int dig;
    while(n!=0)
    {
        dig=n%10;
        z=z*10+dig;
        n/=10;
    }
    return z;
}

3.
/*Hacer un programa para contar los dígitos pares que tiene un número N.  Ej. Si N= 5678312,  este tiene 3 dígitos pares (6, 8, 2).*/

#include <iostream>

using namespace std;

int SumaPares(int n);

int main()
{
    int n;
    float Resultado;
    cout<<"Escribir el número a calcular los pares: ";
    cin>>n;
    Resultado=SumaPares(n);
    cout<<"La suma de los números pares es: "<<Resultado;
    
    return 0;
}

int SumaPares(int n)
{
    float SumaPares=0;
    int digito;
    while(n!=0)
    {
        digito=n%10;
        if(digito%2==0)
        {
            SumaPares+=digito;
        }
        n/=10;
    }
    return SumaPares;
}

4.
/*Dado un número entero, comprobar si el número es capicúa, es decir, si leídos de la izquierda a la derecha y viceversa dan el mismo valor o número.  
Ej. 34543*/

#include <iostream>

using namespace std;

int NumeroReverso(int n);

int main()
{
    int n;
    float Original,Revertido;
    int digito;
    
    cout<<"Escribir el número a comprobar: ";
    cin>>n;
    
    Original=n;
    Revertido=NumeroReverso(n);
    
    if(Original==Revertido)
    {
        cout<<"El número introducido es capicúa";
    }
    else
    {
        cout<<"El número introducido no es capicúa";
    }
    return 0;
}

int NumeroReverso(int n)
{
    int digito;
    float Reverso=0;
    while(n!=0)
    {
       digito=n%10;
       Reverso=Reverso*10+digito;
       n=n/10;
    }
    return Reverso;
}

5.
/*Hallar el complemento a 9 de un número entero N.  Ej. 4567, su complemento es 5432.*/

#include <iostream>

using namespace std;

int encontrarComplementoA9(int numero) 
{
    int complemento = 0;
    int digito,complementoDigito;
    
    while (numero > 0) 
    {
        digito = numero % 10;
        complementoDigito = 9 - digito;
        complemento = complementoDigito + complemento * 10;
        numero /= 10;
    }

    return complemento;
}

int main() {
    int numero;

    cout << "Ingrese un numero entero: ";
    cin >> numero;

    int complemento = encontrarComplementoA9(numero);
    cout << "El complemento a 9 de " << numero << " es: " << complemento << endl;

    return 0;
}

6.
/*Dado un número entero en base 8, comprobar si alguno de sus dígitos no corresponden a su base.  
Ej. El número 2762823, el dígito 8 no corresponde a la base*/

#include <iostream>

using namespace std;

#include <iostream>

bool verificarDigitosEnBase8(int numero) 
{
    while (numero > 0) 
    {
        int digito = numero % 10;
        
        if (digito >= 8) 
        {
            return true;
        }
        numero /= 10;
    }

    return false;
}

int main() 
{
    int numero;

    cout << "Ingrese un numero en base 8: ";
    cin >> oct >> numero;

    if (verificarDigitosEnBase8(numero)) 
    {
        cout << "Algunos dígitos no corresponden a la base 8." << endl;
    } 
    else 
    {
        cout << "Todos los dígitos corresponden a la base 8." << endl;
    }

    return 0;
}
